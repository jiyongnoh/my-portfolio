# .github/workflows/deploy.yml
name: Deploy to EC2

on:
  push:
    branches:
      - main # main 브랜치에 push 시 배포 실행

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Repository에서 최신 코드를 체크아웃합니다.
      - name: Checkout code
        uses: actions/checkout@v2
        # 이전에 동일한 checkout 작업이 있었다면, 중복 부분을 주석 처리하세요.
        # uses: actions/checkout@v2

      # 2. Docker 이미지를 빌드합니다.
      - name: Build Docker image
        run: |
          docker build -t njy95000/my-portfolio:latest .

      # 3. Docker Hub에 로그인합니다.
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          # 이전 로그인 절차가 이미 구현되어 있다면, 중복 코드를 주석 처리 가능:
          # uses: docker/login-action@v1

      # 4. 빌드한 Docker 이미지를 Docker Hub에 Push합니다.
      - name: Push Docker image to Docker Hub
        run: docker push njy95000/my-portfolio:latest

      # 5. EC2 인스턴스에 SSH 접속하여 컨테이너를 배포합니다.
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Docker Hub로부터 최신 이미지를 Pull합니다.
            docker pull njy95000/my-portfolio:latest

            # 기존 컨테이너가 실행 중이라면 종료 후 삭제합니다.
            docker stop my-portfolio || true
            docker rm my-portfolio || true

            # 새로운 Docker 컨테이너를 실행합니다.
            docker run -d --restart=always -p 80:3000 --name my-portfolio njy95000/my-portfolio:latest
